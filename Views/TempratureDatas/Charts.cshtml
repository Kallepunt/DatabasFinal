@model IEnumerable<DatabasFinal.Models.TempratureData>
@{
    ViewData["Title"] = "Charts";
}
@{

    ViewBag.Dates = Model.Where(x => x.Location == "Ute").OrderBy(d => d.Date.Date).Select(x => x.Date.Date.ToShortDateString()).ToArray();
    
    ViewBag.AvgIn = Model.Where(x => x.Location == "Inne").OrderBy(x => x.Date.Date).Select(x => x.Temperature).ToArray();
    ViewBag.AvgOut = Model.Where(x => x.Location == "Ute").OrderBy(x => x.Date.Date).Select(x => x.Temperature).ToArray();

    ViewBag.HumidIn = Model.Where(x => x.Location == "Inne").OrderBy(x => x.Date.Date).Select(x => x.Humidity).ToArray();
    ViewBag.HumidOut = Model.Where(x => x.Location == "Ute").OrderBy(x => x.Date.Date).Select(x => x.Humidity).ToArray();


    ViewBag.MoldIn = Model.Where(x => x.Location == "Inne").OrderBy(x => x.Date.Date).Select(x => x.MouldRisk).ToArray();
    ViewBag.MoldOut = Model.Where(x => x.Location == "Ute").OrderBy(x => x.Date.Date).Select(x => x.MouldRisk).ToArray();

}

<head>

    <script src="~/js/Chart.js"></script>
</head>


<body>



    <h1>Grafer</h1>



    <canvas id="myChart" width="500" height="250">
    </canvas>


    <canvas id="myChart2" width="500" height="250">
    </canvas>



    <canvas id="myChart3" width="500" height="250">
    </canvas>











    <script>

        const ctx = document.getElementById('myChart').getContext('2d')




                const myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Json.Serialize(ViewBag.Dates)),
                        datasets: [{
                            label: 'Inne Temperatur',

                            data: @Html.Raw(Json.Serialize(ViewBag.AvgIn)),
                            fill: false,
                            backgroundColor: ['rgba(255, 99, 132, 0.2)',],
                            borderColor: ['rgba(255, 99, 132, 1)',],







                        }, {
                            label: 'Utomhus Temperatur',

                                data: @Html.Raw(Json.Serialize(ViewBag.AvgOut)),
                                fill: false,
                                backgroundColor: ['rgba(63, 127, 191, 0.2)',],
                                borderColor: ['rgba(63, 127, 191, 1)',],


                        }]
                        
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    
                                    callback: function (value, index, values) {
                                        return value +'°C'
                                    }
                                }
                            }]
                        }
                    },

                });

               const ctx2 = document.getElementById('myChart2').getContext('2d')




                const myChart2 = new Chart(ctx2, {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Json.Serialize(ViewBag.Dates)),
                        datasets: [{
                            label: 'Fuktighet Inne',

                            data: @Html.Raw(Json.Serialize(ViewBag.HumidIn)),
                            fill: false,
                            backgroundColor: ['rgba(255, 99, 132, 0.2)',],
                            borderColor: ['rgba(255, 99, 132, 1)',],
                          




                        }, {
                            label: 'Fuktighet Ute',

                                data: @Html.Raw(Json.Serialize(ViewBag.HumidOut)),
                                fill: false,
                                backgroundColor: ['rgba(63, 127, 191, 0.2)',],
                                borderColor: ['rgba(63, 127, 191, 1)',],


                        }]
                    },

                });

                       const ctx3 = document.getElementById('myChart3').getContext('2d')




                const myChart3 = new Chart(ctx3, {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Json.Serialize(ViewBag.Dates)),
                        datasets: [{
                            label: 'MögelRisk Inne',

                            data: @Html.Raw(Json.Serialize(ViewBag.MoldIn)),
                            fill: false,
                            backgroundColor: ['rgba(255, 99, 132, 0.2)',],
                            borderColor: ['rgba(255, 99, 132, 1)',],







                        }, {
                            label: 'Mögelrisk Ute',

                                data: @Html.Raw(Json.Serialize(ViewBag.MoldOut)),
                                fill: false,
                                backgroundColor: ['rgba(63, 127, 191, 0.2)',],
                                borderColor: ['rgba(63, 127, 191, 1)',],


                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    
                                    callback: function (value, index, values) {
                                        return value + '%'
                                    }
                                }
                            }]
                        }
                    },

                });





    </script>
























</body>